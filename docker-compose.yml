version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: blog_cms_db
    environment:
      POSTGRES_DB: blog_cms_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Celery Broker
  redis:
    image: redis:7-alpine
    container_name: blog_cms_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: blog_cms_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py createsuperuser --noinput --username admin --email admin@example.com || true &&
             gunicorn --bind 0.0.0.0:8000 --workers 4 config.wsgi:application"
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_HOST=db
      - DB_NAME=blog_cms_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
    volumes:
      - ../backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Worker
  celery_worker:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: blog_cms_celery_worker
    command: celery -A config worker -l info
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_HOST=db
      - DB_NAME=blog_cms_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ../backend:/app
    depends_on:
      - db
      - redis
      - backend

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: blog_cms_celery_beat
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_HOST=db
      - DB_NAME=blog_cms_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../backend:/app
    depends_on:
      - db
      - redis
      - backend

  # React Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: blog_cms_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  default:
    name: blog_cms_network
